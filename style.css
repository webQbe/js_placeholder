/* Import Font */
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');


* {
    /* Apply to all elements */
    box-sizing: border-box; /* Ensures padding and borders are included within the element's specified width and height, making layout calculations more predictable. */

}

body {
     background-color: #ecf0f1;
     font-family: 'Roboto', sans-serif;
     display: flex; /* Align horizontally */
     align-items: center; /* Center horizontally */
     justify-content: center; /* Center vertically */
     height: 100vh; /* Take full height */
     overflow: hidden; /* No scrollbars */
     margin: 0;  /* No margins */
}


img {

    max-width: 100%; /* Fit to container */

}

.card {

    box-shadow: 0 2px 10px rgba(0,0,0,0.2); /* Applies a shadow effect around an element's box. 
    
    0: Horizontal offset — moves the shadow horizontally. No Horizontal offset.

    3px: Vertical offset — moves the shadow vertically. 3px places the shadow 3 pixels below the element.

    10px: Blur radius — controls the blur of the shadow. A higher value results in a softer, more spread-out shadow. Here, 10px creates a moderately soft shadow.

    rgba(0, 0, 0, 0.2): Shadow color with transparency.

        rgba stands for Red, Green, Blue, and Alpha (opacity).
        0, 0, 0 represents black.
        0.2 sets the opacity to 20%, making the shadow slightly visible.
    */
    border-radius: 10px; /* Rounded corners */
    overflow: hidden;
    width: 350px;
    
}

.card-header{

    height: 200px;

}

.card-header img{

    object-fit: cover; /* Show full image */
    height: 100%; width: 100%; /* Fit to container */

}

.card-content{

    background-color: #fff;
    padding: 30px; /* Move away content from borders */

}

.card-title{

    height: 20px;
    margin: 0;

}

.card-excerpt {

    color: #777;
    margin: 10px 0 20px; /* Top & Left-Right & Bottom */
    
}

.author {

    display: flex; 

}

.profile-img{

    border-radius: 50%; /* Make image circle shaped */
    overflow: hidden; /* Keep image inside div */
    height: 40px;
    width: 40px;
 
}

.author-info{

    display: flex; flex-direction: column; /* Align children vertically */
    justify-content: space-around; /* Aligns the child elements (depending on the flex direction) with equal spacing around them within the container. 
    
        Visualization:

        If the container width is 600px:

            Assume there are 3 children and each child has a width of 50px.

            Remaining space = 600px - (50px * 3) = 450px.

            With space-around:

                The total space is divided into 4 equal parts 

                (1 part before the first child, 
                 2 parts between children, and 
                 1 part after the last child).

                Each space = 450px / 4 = 112.5px.
    
    */
    margin-left: 10px; /* Push towards right */
    width: 100px;

}

.author-info small{

    color: #aaa;
    margin-top: 5px; /* Push downwards */
    
}